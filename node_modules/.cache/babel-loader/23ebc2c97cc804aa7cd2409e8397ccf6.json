{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\dinshaapp\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  let newTime = new Date().toLocaleTimeString();\n  const [ctime, setCtime] = useState(newTime);\n\n  const UpdateTime = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: Ctime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), \",\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: UpdateTime,\n      children: \"Get Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"xQ1nzcFQY0FVDL/fS77EGzSNn7k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/reacttut/dinshaapp/src/App.jsx"],"names":["React","useState","App","newTime","Date","toLocaleTimeString","ctime","setCtime","UpdateTime","Ctime"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;;;;AACA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AACV,MAAIC,OAAO,GAAC,IAAIC,IAAJ,GAAWC,kBAAX,EAAZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBN,QAAQ,CAACE,OAAD,CAAhC;;AACA,QAAMK,UAAU,GAAC,MAAI,CAEpB,CAFD;;AAIA,sBACI;AAAA,4BACA;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YADA,oBAEA;AAAQ,MAAA,OAAO,EAAED,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAOH,CAdD;;GAAMN,G;;KAAAA,G;AAeN,eAAeA,GAAf","sourcesContent":["import React,{useState} from \"react\";\r\nconst App=()=>{\r\n    let newTime=new Date().toLocaleTimeString();\r\n    const [ctime, setCtime]=useState(newTime);\r\n    const UpdateTime=()=>{\r\n        \r\n    }\r\n\r\n    return(\r\n        <>\r\n        <h1>{Ctime}</h1>,\r\n        <button onClick={UpdateTime}>Get Time</button>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default App;"]},"metadata":{},"sourceType":"module"}